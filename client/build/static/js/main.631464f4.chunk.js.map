{"version":3,"sources":["_reducers/index.js","_reducers/user_reducer.js","_actions/types.js","_actions/user_actinos.js","components/Config.js","components/views/SideBar/sidebar.js","components/utils/ImageSlider.js","components/views/HeaderPage/HeaderPage.js","components/views/BlogPage/LanderPage.js","components/views/LandingPage/Welcome.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/WritePage/WritePage.js","components/views/DetailContentsPage/DetailContentsPage.js","components/views/EditPage/EditPage.js","hoc/auth.js","components/App.js","index.js"],"names":["rootReducer","combineReducers","user","state","action","type","userData","payload","register","loginSucces","auth","axios","get","then","response","data","logoutUser","dataToSubmit","post","Sider","Layout","Sidebar","props","useState","isModalVisible","setIsModalVisible","category","setCategory","categoryNames","setcategoryNames","categoryKey","setcategoryKey","useEffect","getCategory","body","id","Axios","success","alert","showCategory","map","name","index","Item","value","_id","key","icon","UserOutlined","RightOutlined","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","style","overflow","height","position","left","paddingLeft","theme","className","display","alignItems","justifyContent","fontSize","borderBottom","PlusOutlined","onClick","paddingRight","title","visible","onOk","err","onCancel","onChange","event","currentTarget","placeholder","selectedKeys","item","eventKey","handleCategory","mode","defaultSelectedKeys","ImageSlider","content","images","length","width","PictureOutlined","cardHandler","autoplay","image","src","Header","HeaderPage","userId","match","params","useSelector","dispatch","useDispatch","backgroundColor","margin","window","location","replace","history","push","Content","LanderPage","Skip","setSkip","Limit","Contents","setContents","setPostSize","Category","getContents","writer","contentsInfo","postSize","pathname","renderCards","lg","md","xs","hoverable","cover","actions","EditOutlined","description","textcontents","textOverflow","whiteSpace","href","selected","marginLeft","padding","minHeight","marginBottom","gutter","Welcome","isAuth","marginRight","Title","Typography","LoginPage","rememberMeChecked","localStorage","getItem","rememberMe","setrememberMe","formErrorMessage","setFormErrorMessage","handleRememberMe","initialId","initialValues","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","loginUser","loginSuccess","setItem","removeItem","catch","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","paddingTop","level","prefix","color","onBlur","fontFamily","border","borderRadius","checked","htmlType","minWidth","disabled","float","tailFormItemLayout","wrapperCol","span","offset","sm","RegisterPage","editor","confirmPassword","email","phone","oneOf","registerUser","maxWidth","label","hasFeedback","validateStatus","Option","Select","WritePage","setTitle","Images","setImages","categoryValue","setcategoryValue","categorys","document","getElementById","childElementCount","formData","FormData","config","header","Editor","el","querySelector","previewStyle","initialEditType","hooks","addImageBlobHook","blob","callback","append","filePath","replaced","flexDirection","marginTop","overflowY","paddingBottom","getHtml","textcontent","getElementsByClassName","innerText","contents","DetailContentsPage","contentId","setcontentsInfo","categoryInfo","setcategoryInfo","setwriteInfo","getContent","ymd","createdAt","substring","hmc","Viewer","initialValue","EditPage","contentInfo","contentsId","SpecificComponent","option","adminRoute","AuthenticationCheck","isAdmin","App","fallback","exact","path","component","Auth","WelcomePage","LandingPage","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","file":"static/js/main.631464f4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    AUTH_USER,\r\n    REGISTER_USER,\r\n    LOGIN_USER,\r\n    LOGOUT_USER\r\n}from '../_actions/types'\r\n\r\n\r\n\r\nexport default function(state={},action){\r\n\r\n    switch(action.type){\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload }\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload }\r\n        case LOGIN_USER:\r\n            return {...state , loginSucces: action.payload}\r\n        case LOGOUT_USER:\r\n            return {...state}\r\n      \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","export const AUTH_USER = 'auth_user';\r\nexport const REGISTER_USER = 'register_user'\r\nexport const LOGIN_USER = 'login_user'\r\nexport const LOGOUT_USER = 'logout_user'","import axios from 'axios'\r\nimport {\r\n    AUTH_USER, \r\n    REGISTER_USER,\r\n    LOGIN_USER,\r\n    LOGOUT_USER\r\n}from './types'\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n        return{\r\n            type : REGISTER_USER,\r\n            payload : request\r\n        }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n        return{\r\n            type : LOGIN_USER,\r\n            payload : request\r\n        }\r\n}\r\nexport function logoutUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/logout`,dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n        return{\r\n            type : LOGOUT_USER,\r\n            payload : request\r\n        }\r\n}\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","import React ,{useState , useEffect}from 'react'\r\n\r\nimport { Icon,Layout, Menu,Modal,Input, Button } from 'antd';\r\nimport Axios from 'axios'\r\nimport \"../SideBar/sidebar.css\"\r\n\r\n\r\nimport {\r\n  UserOutlined,\r\n  UploadOutlined,\r\n  VideoCameraOutlined,\r\n  RightOutlined,\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Sider } = Layout;\r\nfunction Sidebar(props) {\r\n\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [categoryNames, setcategoryNames] = useState([])\r\n    const [categoryKey, setcategoryKey] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        getCategory();\r\n\r\n        \r\n    }, [])\r\n    \r\n    \r\n    const getCategory = () => {\r\n\r\n        let body = {\r\n            id : props.userData\r\n        }\r\n\r\n         \r\n        Axios.post('/api/categorys/category',body)\r\n        .then( response => {\r\n            if(response.data.success){\r\n               \r\n                setcategoryNames(response.data.categoryNames)\r\n            }else{\r\n                alert('카테고리 목록을 불러오는데 실패하였습니다.')\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n    \r\n    const handleOk = () => {\r\n\r\n        if(!category){\r\n            return alert(\"카테고리 이름을 입력해주세요\")\r\n        }\r\n\r\n        let body  = {\r\n            id : props.userData,\r\n            category : category \r\n        }\r\n    \r\n\r\n        Axios.post('/api/categorys',body)\r\n\r\n        .then( response => {\r\n            if(response.data.success){\r\n                setcategoryNames(response.data.categoryNames)\r\n                setCategory(\"\")\r\n                return alert(\"카테고리가 추가되었습니다.\")\r\n            }else{\r\n                return alert(response.err)\r\n            }\r\n        })\r\n\r\n\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const categoryChangeHandler = (event) => {\r\n        \r\n        setCategory(event.currentTarget.value);\r\n    }\r\n    \r\n    \r\n    const showCategory = categoryNames.map((name,index) => {\r\n        \r\n        return   <Menu.Item value={name._id} key={index+1}  icon={<UserOutlined />}>\r\n                    <RightOutlined />\r\n                    {name.category}\r\n                </Menu.Item>\r\n               \r\n            }) \r\n            \r\n    const selectedHandler = (event) => {\r\n        setcategoryKey(event.item.props.eventKey)\r\n        props.handleCategory(event.item.props.value);\r\n    }\r\n\r\n    const totalHandler = () => {\r\n        setcategoryKey(0)\r\n        props.handleCategory();\r\n    }\r\n\r\n  \r\n    return (\r\n    \r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                    paddingLeft:'10px'\r\n                   \r\n                }}\r\n                theme=\"light\"\r\n                className=\"sidebar\"\r\n                >\r\n                    \r\n                <div className=\"logo\" style ={{ display:'flex' ,alignItems:'center' ,justifyContent:'center' ,fontSize : '20px',borderBottom : '1px solid gray',}}  >\r\n                    Y LOG\r\n                </div>\r\n                \r\n                \r\n                <PlusOutlined  onClick ={showModal} style ={{display : 'flex' , justifyContent:'flex-end', paddingRight:'15px',fontSize:'large'}} />\r\n\r\n                <Modal title=\"카테고리 추가\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                    <Input  value={category} onChange = {categoryChangeHandler} placeholder =\"추가할 카테고리를 입력하세요\"/>\r\n                </Modal>\r\n\r\n\r\n                <Menu selectedKeys={categoryKey} onClick={selectedHandler}  mode=\"inline\" defaultSelectedKeys={['0']}  >\r\n                     {showCategory}\r\n                </Menu>\r\n\r\n                <div style = {{display:'flex' ,alignItems:'center' ,justifyContent:'center'}}>\r\n                    <Button onClick={totalHandler} >전체보기</Button>\r\n                </div>\r\n            </Sider>\r\n    \r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport {Carousel } from 'antd'\r\nimport { PictureOutlined } from '@ant-design/icons';\r\n\r\nfunction ImageSlider(props) {\r\n\r\n\r\n    if(props.content.images.length === 0){\r\n\r\n        \r\n\r\n        return <div   style={{width:'100%',height:'100%', display:'flex' ,justifyContent:'center' ,alignItems:'center', fontSize:'100px'}}> \r\n            <PictureOutlined onClick ={ () => {props.cardHandler(\"detail\",props.content)}}\r\n                    \r\n            />\r\n        </div>\r\n    }else{\r\n        return (\r\n            \r\n            <Carousel autoplay >\r\n                {props.content.images.map((image,index)=>(\r\n                    <div key = {index}   onClick ={ () => {props.cardHandler(\"detail\",props.content)}}>\r\n                        <img style={{width:'100%',height:'100%'}}src={`http://localhost:5000/${image}`}/>\r\n                    </div>\r\n    \r\n                ))}\r\n            </Carousel>\r\n            \r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ImageSlider\r\n","import React from 'react'\r\nimport { Layout, Button } from 'antd';\r\nimport { logoutUser } from '../../../_actions/user_actinos';\r\nimport {useSelector , useDispatch} from 'react-redux'\r\n\r\n\r\nconst { Header } = Layout;\r\nfunction HeaderPage(data) {\r\n    const userId =  data.props.match.params.userId;\r\n\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = () => {\r\n        console.log(data)\r\n        let dataToSubmit = user.userData\r\n            dispatch(logoutUser(dataToSubmit)).then(response => {\r\n            if(response.payload.success){\r\n              \r\n                window.location.replace(`/blog/${userId}`)\r\n            }else{\r\n                alert(response.payload.err);\r\n            }\r\n        })\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        data.props.history.push('/login')\r\n    }\r\n    \r\n\r\n    if( user.userData && (user.userData._id === userId)){\r\n        return <div style={{backgroundColor:\"white\"}}>\r\n        \r\n                    <div style={{ borderBottom : '1px solid gray',\r\n                                height: '70px',fontSize: '30px',\r\n                                display :'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems:'center' \r\n                                }}> \r\n                        \r\n                        <div style ={{width:'38.234px'}}></div>\r\n                        <div>\r\n                        <Header className=\"site-layout-background\">\r\n                        YOON\r\n                        </Header>\r\n                        </div>\r\n                        <div style={{margin:'24px'}}>\r\n                        <Button onClick = {logoutHandler}>로그아웃</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    }else{\r\n        return<div style={{backgroundColor:\"white\"}}>\r\n        \r\n                <div style={{ borderBottom : '1px solid gray',\r\n                            height: '70px',fontSize: '30px',\r\n                            display :'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems:'center' \r\n                             }}> \r\n                    \r\n                    <div style ={{width:'38.234px'}}></div>\r\n                    <div>\r\n                    <Header className=\"site-layout-background\">\r\n                    YOON\r\n                    </Header>\r\n                    </div>\r\n                    <div style={{margin:'24px'}}>\r\n                    <Button onClick = {loginHandler}>로그인</Button>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default HeaderPage\r\n","import React,{useEffect,useState} from 'react';\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport { Layout,Col,Card,Row, Button ,} from 'antd';\r\nimport Sidebar from '../SideBar/sidebar'\r\nimport ImageSlider from '../../utils/ImageSlider'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport Axios from 'axios';\r\nimport HeaderPage from '../HeaderPage/HeaderPage'\r\nimport {\r\n    EditOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\n\r\n\r\nfunction LanderPage(props) {\r\n    const userId = props.match.params.userId;\r\n    \r\n\r\n    const [Skip, setSkip] = useState(0);\r\n    const [Limit, setLimit] = useState(8);\r\n    const [Contents, setContents] = useState([]);\r\n    const [PostSize, setPostSize] = useState(0);\r\n    const [Category, setCategory] = useState(\"\");\r\n    const user = useSelector(state => state.user)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        let body = {\r\n            skip : Skip,\r\n            limit : Limit\r\n        }\r\n\r\n        getContents();\r\n\r\n\r\n    }, [Category])\r\n\r\n\r\n    const getContents = () => {\r\n      \r\n        let body = {\r\n            writer : userId,\r\n            category : Category\r\n        }\r\n        Axios.post('/api/contents/content',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                setContents([...response.data.contentsInfo])\r\n                // if(body.loadMore){\r\n                //     console.log(Contents)\r\n                // }else{\r\n                //     console.log(response.data)\r\n                //     setContents(response.data.contentInfo)\r\n                // }\r\n                \r\n                setSkip(Skip + Limit);\r\n                setPostSize(response.data.postSize);\r\n\r\n\r\n            }else{\r\n                alert(\"상품정보를 가져오는데 실패하였습니다.\")\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const cardHandler = (type,data) =>{\r\n       \r\n        if(type === \"edit\"){\r\n            console.log(data)\r\n            props.match.params = data;\r\n            props.history.push( {\r\n                pathname: `/edit/${data._id}`,\r\n                state : {contentsInfo : data}\r\n            })\r\n        }else if(type === \"detail\"){\r\n            props.history.push(`/blog/${userId}/${data._id}` )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderCards = Contents.map((content,index) => {\r\n\r\n        if(user.userData._id === userId){\r\n            return <Col key= {index} lg={4} md={8} xs={24}   >\r\n       \r\n                <Card\r\n                    hoverable\r\n               \r\n                    cover ={<ImageSlider content= {content} cardHandler = {cardHandler} />}\r\n                    actions={[  <EditOutlined key=\"edit\" onClick ={ () => {cardHandler(\"edit\",content ) } } />]}\r\n                    \r\n                    >\r\n                        <Meta\r\n                            onClick ={ () => {cardHandler(\"detail\",content) }}\r\n                            title={content.title}\r\n                        /> \r\n                \r\n                        <Meta\r\n                            description={content.textcontents}\r\n                            style={{\r\n\r\n                            overflow:'hidden',\r\n                            textOverflow:'ellipsis',\r\n                            fontSize:'small',\r\n                            whiteSpace:'nowrap'\r\n                        }}\r\n                        />\r\n                    \r\n                </Card>\r\n             \r\n        </Col> \r\n\r\n\r\n        }else{\r\n            return <Col key= {index} lg={4} md={8} xs={20} >\r\n                    <a href = {`/blog/${userId}/${content._id}`}>\r\n                        <Card\r\n                            hoverable\r\n                            cover ={<ImageSlider content= {content} cardHandler = {cardHandler} />}\r\n                         \r\n                            >\r\n                                <Meta\r\n                                    title={content.title}\r\n                                /> \r\n                        \r\n                                <Meta\r\n                                    description={content.textcontents}\r\n                                    style={{\r\n\r\n                                    overflow:'hidden',\r\n                                    textOverflow:'ellipsis',\r\n                                    fontSize:'small',\r\n                                    whiteSpace:'nowrap'\r\n                                }}\r\n                                />\r\n                            \r\n                        </Card>\r\n                    </a>\r\n                </Col> \r\n\r\n        }\r\n   \r\n\r\n    })\r\n\r\n    const handleCategory = (selected) => {\r\n        setCategory(selected)\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        if(user.userData._id === userId){\r\n            return <Button>로그아웃</Button>\r\n        }else{\r\n            return <Button>로그인</Button>\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Layout  style={{ height: '100vh'   }} >\r\n            <Sidebar userData = {userId} handleCategory = {selected => handleCategory(selected)} ></Sidebar>\r\n\r\n            <Layout className=\"site-layout\" style = {{ marginLeft: 200 }}> \r\n             \r\n\r\n                <HeaderPage props={props}></HeaderPage>\r\n           \r\n              \r\n                <Content style={{ margin: '16px',    }}>\r\n                    <div className=\"site-layout-background\" \r\n                            style={{overflow: 'auto',\r\n                            height:'100%',\r\n                            padding: 24, \r\n                            minHeight: 360 }}>\r\n\r\n                        <div style={{display:'flex', justifyContent:'flex-end' ,marginBottom:'10px'}}>\r\n                            <Button onClick = { () => { props.history.push('/write')}} >글쓰기</Button>\r\n                        </div>\r\n\r\n\r\n                        <Row gutter ={[16,16]} style={{height:'10%'}}>\r\n                            {renderCards}\r\n                        </Row>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                </Content>\r\n\r\n            \r\n            </Layout>\r\n         \r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default LanderPage\r\n","import React from 'react'\r\nimport { Layout ,Button } from 'antd';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { logoutUser } from '../../../_actions/user_actinos';\r\nimport {LanderPage} from '../BlogPage/LanderPage'\r\nconst { Header,Content } = Layout;\r\n\r\nfunction Welcome(props) {\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    const logoutHandler = () => {\r\n        let dataToSubmit = user.userData\r\n        dispatch(logoutUser(dataToSubmit)).then(response => {\r\n            if(response.payload.success){\r\n              \r\n                window.location.replace(\"/\")\r\n            }else{\r\n                alert(response.payload.err);\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    if(user.userData && user.userData.isAuth ){\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Layout style={{height :'100vh'}}>\r\n                    <div style={{ display :'flex', justifyContent:'center',height: '20%'  }}></div>\r\n                    <Content\r\n                        style={{ display :'flex', justifyContent:'center',height: '50%', backgroundColor: 'skyblue',alignItems:'center' }}>\r\n                        <h1 style={{fontSize :  '50px'}}>\r\n                            Y Log\r\n                        </h1>\r\n\r\n                    </Content>\r\n                    <div\r\n                        style={{ height: '30%',display :'flex', alignItems:'center', justifyContent:'center' }}>\r\n                        <Button onClick = {() => { props.history.push(`/blog/${user.userData._id}`)}}\r\n                            type='primary' \r\n                            style={{  marginRight : '5%', width : '20%', height : '20%'}} \r\n                        >\r\n                            {user.userData.id}님 환영합니다 (블로그로 이동)\r\n                        </Button>\r\n                        <Button type='primary' style = {{  width : '20%', height : '20%'}} \r\n                         onClick = {logoutHandler}>로그아웃</Button>\r\n\r\n                    </div>\r\n                </Layout>\r\n            </div>\r\n          \r\n\r\n        \r\n\r\n        )\r\n\r\n    }else{\r\n        return (\r\n            <div>\r\n                <Layout style = {{height :'100vh'}}>\r\n                    <div style = {{ display :'flex', justifyContent:'center',height: '20%'  }}>Header</div>\r\n                    <Content style = {{ display :'flex', justifyContent:'center',height: '50%', backgroundColor: 'skyblue',alignItems:'center' }}>\r\n                        <h1 style = {{fontSize :  '50px'}}>\r\n                            Y Log\r\n                        </h1>\r\n                            \r\n                        \r\n                            \r\n                    </Content>\r\n                    <div style = {{ height: '30%',display :'flex', alignItems:'center', justifyContent:'center' }}  >\r\n                        <Button type='primary' style = {{ marginRight : '5%', width : '20%', height : '20%'}} \r\n                        onClick = {() =>{\r\n                            props.history.push(\"/login\");\r\n                        }} >\r\n                        로그인\r\n                        </Button>\r\n                        <Button type='primary' style = {{ width : '20%', height : '20%'}} \r\n                         onClick = {() =>{\r\n                            props.history.push(\"/register\");\r\n                        }}>회원가입</Button>\r\n        \r\n                    </div>\r\n                </Layout>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Welcome\r\n","import React, {useState} from 'react'\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../_actions/user_actinos\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n    const dispatch = useDispatch();\r\n    const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n    const [rememberMe, setrememberMe] = useState(rememberMeChecked)\r\n    const [formErrorMessage, setFormErrorMessage] = useState('')\r\n\r\n\r\n    const handleRememberMe = () => {\r\n        setrememberMe(!rememberMe)\r\n      };\r\n\r\n\r\n    const initialId= localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                id: initialId,\r\n                password: '',\r\n            }}\r\n            validationSchema = {Yup.object().shape({\r\n                id : Yup.string()\r\n                .required('아이디를 입력해주세요'),\r\n                password: Yup.string()\r\n                .min(6, '최소 6자리의 비밀번호를 입력해주세요')\r\n                .required('비밀번호를 입력하세요')\r\n            })}\r\n            \r\n\r\n            onSubmit= {(values, {setSubmitting}) => {\r\n                setTimeout( () => {\r\n                    let dataToSubmit = {\r\n                        id : values.id,\r\n                        password: values.password\r\n                    };\r\n            \r\n                    dispatch(loginUser(dataToSubmit))\r\n                    .then(response => {\r\n                        if(response.payload.loginSuccess) {\r\n                            window.localStorage.setItem('userId', response.payload.userId);\r\n                            if(rememberMe === true){\r\n                                window.localStorage.setItem('rememberMe', values.id);\r\n                            }else{\r\n                                localStorage.removeItem('rememberMe');\r\n                            }\r\n                            props.history.push(\"/\");\r\n                        } else {\r\n                            setFormErrorMessage('Check out your Account or Password again')\r\n                          }\r\n                    })\r\n                    .catch(err => {\r\n                        setFormErrorMessage('Check out your Account or Password again')\r\n                        setTimeout(() => {\r\n                          setFormErrorMessage(\"\")\r\n                        }, 3000);\r\n                      });\r\n\r\n                      setSubmitting(false);\r\n                    }, 500);\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    dirty,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    handleReset,\r\n                } = props;\r\n                return (\r\n                    <div className=\"app\" style={{ width: '100%', backgroundColor: 'skyblue' ,display : 'flex', justifyContent:'center', paddingTop : '1.5%'}}>\r\n                    <Title level={1}>로그인</Title>\r\n                    <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n        \r\n                      <Form.Item required>\r\n                        <Input\r\n                          id=\"id\"\r\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                          placeholder=\"Enter your id\"\r\n                          type=\"text\"\r\n                          value={values.id}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={\r\n                            errors.id && touched.id ? 'text-input error' : 'text-input'\r\n                          }\r\n                        />\r\n                        {errors.id && touched.id && (\r\n                          <div className=\"input-feedback\">{errors.id}</div>\r\n                        )}\r\n                      </Form.Item>\r\n        \r\n                      <Form.Item required>\r\n                        <Input\r\n                          style ={{fontFamily : '-apple-system'}}\r\n                          id=\"password\"\r\n                          prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                          placeholder=\"Enter your password\"\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={\r\n                            errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                          }\r\n                        />\r\n                        {errors.password && touched.password && (\r\n                          <div className=\"input-feedback\">{errors.password}</div>\r\n                        )}\r\n                      </Form.Item>\r\n        \r\n                      {formErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n                      )}\r\n        \r\n                      <Form.Item>\r\n                        <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                        <div>\r\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                            Log in\r\n                        </Button>\r\n                        </div>\r\n                        <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                          forgot password\r\n                        </a>\r\n                        Or <a href=\"/register\">register now!</a>\r\n                      </Form.Item>\r\n                    </form>\r\n                  </div>\r\n                );\r\n\r\n\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actinos\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Typography\r\n  } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst formItemLayout = {\r\nlabelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n},\r\nwrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n},\r\n};\r\nconst tailFormItemLayout = {\r\nwrapperCol: {\r\n    xs: {\r\n    span: 24,\r\n    offset: 0,\r\n    },\r\n    sm: {\r\n    span: 16,\r\n    offset: 10,\r\n    },\r\n},\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Formik\r\n            initialValues = {{\r\n                name:'',\r\n                id: '',\r\n                password:'',\r\n                confirmPassword:'',\r\n                email:'',\r\n                phone:'',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                name : Yup.string()\r\n                .required('이름을 입력해주세요'),\r\n                id : Yup.string()\r\n                .required('아이디를 입력해주세요'),\r\n                email : Yup.string()\r\n                .required('이메일을 입력해주세요'),\r\n                phone : Yup.string()\r\n                .required('전화번호를 입력해주세요'),\r\n                password : Yup.string()\r\n                .min(6, '비밀번호는 6자리 이상이어야합니다')\r\n                .required('비밀번호를 입력해주세요'),\r\n                confirmPassword : Yup.string()\r\n                .oneOf([Yup.ref('password'),null],'비밀번호가 일치하지 않습니다')\r\n                .required('비밀번호 확인란을 입력해주세요')\r\n            })}\r\n\r\n            onSubmit = {(values, { setSubmitting }) =>{\r\n                console.log(\"서브밋\")\r\n                setTimeout(() => {\r\n                    let dataToSubmit = {\r\n                        name : values.name,\r\n                        id : values.id,\r\n                        email : values.email,\r\n                        phone : values.phone,\r\n                        password : values.password,\r\n                    };\r\n\r\n                    dispatch(registerUser(dataToSubmit)).then(response => {\r\n                        if(response.payload.success){\r\n                            props.history.push(\"/login\")\r\n                        }else{\r\n                            alert(\"회원가입에 실패했습니다.\")\r\n                        }\r\n                    })\r\n\r\n                    setSubmitting(false);\r\n\r\n                },500);\r\n            }}\r\n\r\n\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    dirty,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    handleReset,\r\n                } = props;\r\n                  return (\r\n                    <div className=\"app\" style={{width: '100%', backgroundColor: 'skyblue' ,display : 'flex', justifyContent:'center', paddingTop : '1.5%'}}>\r\n                        <Title level={1}>회원가입</Title>\r\n                        <br/>\r\n                        <br/>\r\n                    \r\n                            <Form style={{ maxWidth: '375px',   width: '100%', backgroundColor: 'skyblue' }} onSubmit={handleSubmit} >\r\n\r\n                                <Form.Item required label=\"Name\">\r\n                                    <Input\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter your name\"\r\n                                    type=\"text\"\r\n                                    value={values.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    />\r\n                                    {errors.name && touched.name && (\r\n                                    <div className=\"input-feedback\">{errors.name}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required label=\"id\">\r\n                                    <Input\r\n                                    id=\"id\"\r\n                                    placeholder=\"Enter your ID\"\r\n                                    type=\"text\"\r\n                                    value={values.id}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.id && touched.id ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    />\r\n                                    {errors.id && touched.id && (\r\n                                    <div className=\"input-feedback\">{errors.id}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                                    <Input\r\n                                    id=\"email\"\r\n                                    placeholder=\"Enter your Email\"\r\n                                    type=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    />\r\n                                    {errors.email && touched.email && (\r\n                                    <div className=\"input-feedback\">{errors.email}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                \r\n                                <Form.Item required label=\"Phone\">\r\n                                    <Input\r\n                                    id=\"phone\"\r\n                                    placeholder=\"Enter your phone\"\r\n                                    type=\"phone\"\r\n                                    value={values.phone}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.phone && touched.phone ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    />\r\n                                    {errors.phone && touched.phone && (\r\n                                    <div className=\"input-feedback\">{errors.phone}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'} >\r\n                                    <Input\r\n                                    id=\"password\"\r\n                                    placeholder=\"Enter your password\"\r\n                                    type=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    style ={{fontFamily: 'cursive'}}\r\n                                    />\r\n                                    {errors.password && touched.password && (\r\n                                    <div className=\"input-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required label=\"Confirm\" hasFeedback>\r\n                                    <Input\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Enter your confirmPassword\"\r\n                                    type=\"password\"\r\n                                    value={values.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                                    }\r\n                                    style ={{fontFamily: 'cursive'}}\r\n                                    />\r\n                                    {errors.confirmPassword && touched.confirmPassword && (\r\n                                    <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                    <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting} >\r\n                                    가입\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                  \r\n                  );\r\n                }}\r\n\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React,{useState ,useEffect} from 'react'\r\nimport { useSelector,  } from \"react-redux\";\r\nimport Editor from '@toast-ui/editor';\r\nimport { Input ,Button,Select} from 'antd';\r\nimport axios from 'axios';\r\nimport '@toast-ui/editor/dist/toastui-editor.css'; \r\n\r\n\r\nlet editor;\r\nconst { Option } = Select;\r\n\r\nfunction WritePage(props) {\r\n  \r\n    \r\n    const [Title, setTitle] = useState(\"\");\r\n    const [Images, setImages] = useState([]);\r\n    const [Category, setCategory] = useState([]);\r\n    const user = useSelector(state => state.user);\r\n    const [categoryValue, setcategoryValue] = useState(\"\");\r\n    \r\n    useEffect( () => {\r\n     \r\n        if(user.userData){\r\n            getCategory();\r\n        }\r\n        \r\n        \r\n    },[user])\r\n  \r\n\r\n    const  getCategory = () => {\r\n       console.log(user)\r\n\r\n        let  body = {\r\n            id : user.userData._id\r\n        }\r\n\r\n         \r\n        axios.post('/api/categorys/category',body)\r\n        .then( response => {\r\n            if(response.data.success){\r\n               setCategory(response.data.categoryNames); \r\n\r\n            }else{\r\n                alert('카테고리 목록을 불러오는데 실패하였습니다.')\r\n            }\r\n        });\r\n    }\r\n        \r\n    const handleChange = (value) => {\r\n        setcategoryValue(value);\r\n    }\r\n\r\n    \r\n    const showCategory = Category.map((categorys,index) => {\r\n        return  <Option key = {index} value= {categorys._id}> {categorys.category}</Option>\r\n               \r\n    }) \r\n\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setTitle(event.currentTarget.value);\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n    if(document.getElementById(\"editor\") && document.getElementById(\"editor\").childElementCount === 0){\r\n            let formData = new FormData();\r\n\r\n            const config = {\r\n                header : {'content-type': 'multipart/form-data'}\r\n            }\r\n\r\n            editor = new Editor({\r\n            el: document.querySelector('#editor'),\r\n            previewStyle: 'vertical',\r\n            height:'700px',\r\n            initialEditType: 'wysiwyg',\r\n            placeholder: '내용을 입력하세요',\r\n            hooks : {\r\n                addImageBlobHook: (blob,callback) =>{\r\n                    \r\n                    console.log(blob)\r\n                    formData.append(\"file\",blob)\r\n                    \r\n\r\n                    axios.post(\"/api/contents/image\",formData,config)\r\n                    .then(response => {\r\n                        if(response.data.success){\r\n                            console.log(response.data.filePath)\r\n                            setImages([...Images,response.data.filePath])\r\n                            let replaced = response.data.filePath.replace(\"\\\\\",\"/\");\r\n                            callback(`http://localhost:5000/${replaced}`,\"alt text\");\r\n\r\n                        }else{\r\n                            alert('파일을 저장하는데 실패했습니다.')\r\n                        }\r\n                    })\r\n              \r\n\r\n                }\r\n                \r\n            }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    const submitHandler= (event) => {\r\n      \r\n\r\n        let content = editor.getHtml();\r\n        let textcontent = document.getElementsByClassName('tui-editor-contents')[0].innerText\r\n        // console.log(editor.getTextObject(editor.getRange()))\r\n        // console.log(document.getElementsByClassName('tui-editor-contents')[0].innerText)\r\n        if(!Title || !content || !categoryValue){\r\n            return alert(\"모든 값을 작성해야합니다.\")\r\n        }\r\n\r\n        const contents = {\r\n            writer : props.user.userData._id,\r\n            title : Title,\r\n            contents : content,\r\n            textcontents : textcontent,\r\n            images : Images,\r\n            category : categoryValue\r\n           \r\n        }\r\n\r\n        axios.post('/api/contents/write',contents)\r\n        .then(response => {\r\n            if(response.data.success){\r\n       \r\n                props.history.push(`/blog/${user.userData._id}`)\r\n            }else{\r\n                console.log(response.data.err)\r\n            }\r\n\r\n        });\r\n\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n      \r\n\r\n\r\n    return (\r\n       \r\n         \r\n            <div style={{display:'flex' , flexDirection: 'column' ,alignItems:'center',marginTop:'50px'}}>\r\n\r\n                  \r\n                    <div style={{display:'flex' ,flexDirection:'column'}}>\r\n                \r\n                    <Select onChange = {handleChange}  style={{width :'150px' ,marginBottom :'10px'}}>\r\n                        {showCategory}\r\n                    </Select>\r\n                  \r\n\r\n                    <Input placeholder=\"제목을 입력하세요\" style= {{     \r\n                        \r\n                        height:'50px',\r\n                        width:'860px',\r\n                        marginBottom :'50px'\r\n                        }} onChange = {titleChangeHandler} value = {Title}>\r\n                    </Input>\r\n                    </div>   \r\n                    <div id = \"editor\" style= {{     \r\n                        overflowY: 'hidden',\r\n                        paddingLeft: '10px',\r\n                        paddingRight: '10px',\r\n                        paddingBottom: '50px',\r\n                        width:'880px',\r\n                        }}>\r\n                \r\n                    </div>\r\n                    \r\n                    <div style={{display:'flex' ,justifyContent:'center'}}>\r\n                        <Button onClick = {submitHandler}  style={{marginRight:'10px'}}>완료</Button>\r\n                        <Button onClick = {()=> { props.history.push(`blog/${props.user.userData._id}`)}}>취소</Button>\r\n                    </div>   \r\n            </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default WritePage\r\n","import React,{useEffect,useState} from 'react';\r\nimport Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\r\nimport { PageHeader } from 'antd';\r\nimport axios from 'axios';\r\nimport {Button} from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailContentsPage(props) {\r\n    const userId = props.match.params.userId;\r\n    const contentId = props.match.params.contentId\r\n\r\n    const [contentsInfo, setcontentsInfo] = useState({})\r\n    const [categoryInfo, setcategoryInfo] = useState({})\r\n    const [writeInfo, setwriteInfo] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        getContent()\r\n        \r\n\r\n    }, [])\r\n    \r\n    \r\n\r\n    const getContent = () => {\r\n        let body = {\r\n            contentId : contentId\r\n        }\r\n\r\n        axios.post('/api/contents/detail',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n\r\n                let ymd = response.data.contentsInfo[0].createdAt.substring(0,10)\r\n                let hmc = response.data.contentsInfo[0].createdAt.substring(11,19)\r\n\r\n\r\n                \r\n                response.data.contentsInfo[0].createdAt = ymd+\" \"+hmc\r\n                console.log(response.data)\r\n                setcontentsInfo(response.data.contentsInfo[0])\r\n                setcategoryInfo(response.data.contentsInfo[0].category)\r\n                setwriteInfo(response.data.contentsInfo[0].writer);\r\n            }else{\r\n                alert(\"게시물을 불러오는데 실패했습니다.\")\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const listHandler = () => {\r\n        props.history.push(`/blog/${userId}`)\r\n    }\r\n\r\n    if(document.getElementById(\"viewer\")  ){\r\n        const editor = new Viewer({\r\n            el: document.querySelector('#viewer'),\r\n            previewStyle: 'vertical',\r\n            height:'700px',\r\n            initialValue: contentsInfo.contents,\r\n            \r\n\r\n        });\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        let body = {\r\n            contentId : contentId\r\n        }\r\n\r\n        axios.post('/api/contents/delete',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(`/blog/${userId}`)\r\n            }else{\r\n                alert(\"게시글 삭제를 실패했습니다.\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n      \r\n            <div style={{display:'flex' , flexDirection: 'column' ,alignItems:'center',padding:'50px 0 100px 0'}}>\r\n               \r\n                <div style= {{     \r\n                            height:'50px',\r\n                            width:'45%',\r\n                            marginBottom :'30px',\r\n                            \r\n                            display : 'flex',\r\n                            alignItems:'center',\r\n                            paddingBottom : '20px',\r\n                            fontSize: 'xxx-large'\r\n                }}>\r\n                    <div style={{display: 'flex',fontSize :'x-large' ,borderBottom:'1px solid #a3a3a3'}} >\r\n                        {categoryInfo.category}\r\n                    </div>\r\n\r\n                </div>\r\n                    <div style= {{     \r\n                            height:'50px',\r\n                            width:'45%',\r\n                            padding: '2% 0 3.5% 0',\r\n                            borderBottom:'1px solid black',\r\n                            display : 'flex',\r\n                            alignItems:'center',\r\n                            fontSize: 'xxx-large'\r\n                        }}>\r\n                        {contentsInfo.title}\r\n                    </div>\r\n\r\n                    <div style= {{     \r\n                            height:'50px',\r\n                            width:'45%',\r\n                            display : 'flex',\r\n                            alignItems:'center',\r\n                            paddingBottom : '20px',\r\n                            fontSize: 'large',\r\n                            justifyContent: 'flex-end'\r\n                }} >{contentsInfo.createdAt}</div> \r\n\r\n                \r\n\r\n                <div id = \"viewer\" style= {{     \r\n                    overflowY: 'hidden',\r\n                    paddingLeft: '10px',\r\n                    paddingRight: '10px',\r\n                \r\n                    width:'45%',\r\n                    minHeight:'600px',\r\n                    padding: '20px',\r\n                    borderBottom:'1px solid black',\r\n                }}>\r\n                </div>\r\n                <div style= {{paddingTop:'20px'}}>      \r\n                    <Button onClick = {listHandler}style= {{marginRight:'10px'}}>목록</Button>\r\n                    <Button onClick = {deleteHandler} style= {{marginLeft:'10px'}}>삭제</Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailContentsPage\r\n","import React,{useState ,useEffect} from 'react'\r\nimport { useSelector,  } from \"react-redux\";\r\nimport Editor from '@toast-ui/editor';\r\nimport { Input ,Button,Select} from 'antd';\r\nimport axios from 'axios';\r\nimport '@toast-ui/editor/dist/toastui-editor.css'; \r\n\r\n\r\nlet editor;\r\nconst { Option } = Select;\r\n\r\nfunction EditPage(props) {\r\n  \r\n    \r\n    const contentInfo = props.location.state.contentsInfo;\r\n    const [Title, setTitle] = useState(contentInfo.title);\r\n    const [Images, setImages] = useState(contentInfo.images);\r\n    const [Category, setCategory] = useState([]);\r\n    const user = useSelector(state => state.user);\r\n    const [categoryValue, setcategoryValue] = useState(\"\");\r\n    \r\n    \r\n\r\n\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setTitle(event.currentTarget.value);\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n    if(document.getElementById(\"editor\") && document.getElementById(\"editor\").childElementCount === 0){\r\n            let formData = new FormData();\r\n\r\n            const config = {\r\n                header : {'content-type': 'multipart/form-data'}\r\n            }\r\n\r\n            editor = new Editor({\r\n            el: document.querySelector('#editor'),\r\n            previewStyle: 'vertical',\r\n            height:'auto',\r\n            initialEditType: 'wysiwyg',\r\n            initialValue : contentInfo.contents,\r\n            hooks : {\r\n                addImageBlobHook: (blob,callback) =>{\r\n                    \r\n                    console.log(blob)\r\n                    formData.append(\"file\",blob)\r\n                    \r\n\r\n                    axios.post(\"/api/contents/image\",formData,config)\r\n                    .then(response => {\r\n                        if(response.data.success){\r\n                            console.log(response.data.filePath)\r\n                            setImages([...Images,response.data.filePath])\r\n                            let replaced = response.data.filePath.replace(\"\\\\\",\"/\");\r\n                            callback(`http://localhost:5000/${replaced}`,\"alt text\");\r\n\r\n                        }else{\r\n                            alert('파일을 저장하는데 실패했습니다.')\r\n                        }\r\n                    })\r\n              \r\n\r\n                }\r\n                \r\n            }         \r\n        });\r\n \r\n        }\r\n\r\n\r\n    const editHandler= (event) => {\r\n      \r\n\r\n        let content = editor.getHtml();\r\n        let textcontent = document.getElementsByClassName('tui-editor-contents')[0].innerText\r\n        // console.log(editor.getTextObject(editor.getRange()))\r\n        // console.log(document.getElementsByClassName('tui-editor-contents')[0].innerText)\r\n        if(!Title || !content ){\r\n            return alert(\"모든 값을 작성해야합니다.\")\r\n        }\r\n\r\n        const body = {\r\n            title : Title,\r\n            contents : content,\r\n            textcontents : textcontent,\r\n            images : Images,\r\n            contentsId : contentInfo._id\r\n        }\r\n\r\n        axios.post('/api/contents/edit',body)\r\n        .then(response => {\r\n            if(response.data.success){\r\n       \r\n                props.history.push(`/blog/${user.userData._id}/${contentInfo._id}`)\r\n            }else{\r\n               alert(\"수정에 실패했습니다.\")\r\n            }\r\n\r\n        });\r\n\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n      \r\n\r\n\r\n    return (\r\n       \r\n         \r\n            <div style={{display:'flex' , flexDirection: 'column' ,alignItems:'center',marginTop:'50px'}}>\r\n\r\n                  \r\n                    <div style={{display:'flex' ,flexDirection:'column'}}>\r\n                \r\n\r\n                    <Input style= {{     \r\n                        \r\n                        height:'50px',\r\n                        width:'860px',\r\n                        marginBottom :'50px'\r\n                        }} onChange = {titleChangeHandler} value = {Title}>\r\n                    </Input>\r\n                    </div>   \r\n                    <div id = \"editor\" style= {{     \r\n                        overflowY: 'hidden',\r\n                        paddingLeft: '10px',\r\n                        paddingRight: '10px',\r\n                        paddingBottom: '50px',\r\n                        height:'100%',\r\n                        width:'880px',\r\n                        }}>\r\n                \r\n                    </div>\r\n                    \r\n                    <div style={{display:'flex' ,justifyContent:'center'}}>\r\n                        <Button onClick = {editHandler}  style={{marginRight:'10px'}}>수정</Button>\r\n                        <Button onClick = {()=> { props.history.push(`/blog/${props.user.userData._id}`)}}>취소</Button>\r\n                    </div>   \r\n            </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default EditPage\r\n","import React , { useEffect } from 'react'\r\nimport { auth } from '../_actions/user_actinos';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function(SpecificComponent, option , adminRoute = null){\r\n    function AuthenticationCheck(props){\r\n\r\n        //state user값 가져오기\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(response => {\r\n                \r\n                if(!response.payload.isAuth) {\r\n                    if(option){\r\n                        props.history.push('/login')\r\n                    }\r\n                }else{\r\n\r\n                    if(adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    } else{\r\n                        if( option === false){\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n        },[])\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport WelcomePage from './views/LandingPage/Welcome';\r\nimport LoginPage from './views/LoginPage/LoginPage'\r\nimport RegisterPage from './views/RegisterPage/RegisterPage'\r\nimport LandingPage from './views/BlogPage/LanderPage'\r\nimport WritePage from './views/WritePage/WritePage'\r\nimport DetailContentsPage from './views/DetailContentsPage/DetailContentsPage'\r\nimport EditPage from './views/EditPage/EditPage'\r\nimport Auth from '../hoc/auth'\r\nimport \"antd/dist/antd.css\"\r\nimport './views/BlogPage/LanderPage.css'\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Suspense fallback={(<div>Loading...</div>)}>\r\n            {/* <NavBar /> */}\r\n           \r\n            <div >\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Auth(WelcomePage,null)} />\r\n                    <Route exact path=\"/login\" component={Auth(LoginPage,false)} />\r\n                    <Route exact path=\"/register\" component={Auth(RegisterPage,false)} />\r\n                    <Route exact path=\"/blog/:userId\" component={Auth(LandingPage,null)} />\r\n                    <Route exact path=\"/blog/:userId/:contentId\" component={Auth(DetailContentsPage,null)} />\r\n                    <Route exact path=\"/write\" component={Auth(WritePage,true)} />\r\n                    <Route exact path=\"/edit/:contentId\" component={Auth(EditPage,true)} />\r\n                \r\n                \r\n                \r\n                \r\n                </Switch>\r\n            </div>\r\n            \r\n            {/* <Footer /> */}\r\n        </Suspense>\r\n   \r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport Reducer from './_reducers';\r\nimport App from './components/App';\r\nimport \"antd/dist/antd.css\";\r\nimport './index.css';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}